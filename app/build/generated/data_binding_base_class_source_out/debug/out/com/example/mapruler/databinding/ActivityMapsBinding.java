// Generated by view binder compiler. Do not edit!
package com.example.mapruler.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.EditText;
import android.widget.LinearLayout;
import android.widget.ListView;
import android.widget.RelativeLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.mapruler.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityMapsBinding implements ViewBinding {
  @NonNull
  private final RelativeLayout rootView;

  @NonNull
  public final LinearLayout StartInputLayout;

  @NonNull
  public final Button addRouteButton;

  @NonNull
  public final Button btnShowPOIs;

  @NonNull
  public final EditText buildingEditText;

  @NonNull
  public final LinearLayout buildingInfoLayout;

  @NonNull
  public final LinearLayout destInputLayout;

  @NonNull
  public final EditText destLocationEditText;

  @NonNull
  public final TextView directionsTextView;

  @NonNull
  public final Button findBuildingButton;

  @NonNull
  public final Button findDistanceButton;

  @NonNull
  public final LinearLayout routeLayout;

  @NonNull
  public final ListView routesListView;

  @NonNull
  public final EditText startLocationEditText;

  @NonNull
  public final TextView stepsTextView;

  private ActivityMapsBinding(@NonNull RelativeLayout rootView,
      @NonNull LinearLayout StartInputLayout, @NonNull Button addRouteButton,
      @NonNull Button btnShowPOIs, @NonNull EditText buildingEditText,
      @NonNull LinearLayout buildingInfoLayout, @NonNull LinearLayout destInputLayout,
      @NonNull EditText destLocationEditText, @NonNull TextView directionsTextView,
      @NonNull Button findBuildingButton, @NonNull Button findDistanceButton,
      @NonNull LinearLayout routeLayout, @NonNull ListView routesListView,
      @NonNull EditText startLocationEditText, @NonNull TextView stepsTextView) {
    this.rootView = rootView;
    this.StartInputLayout = StartInputLayout;
    this.addRouteButton = addRouteButton;
    this.btnShowPOIs = btnShowPOIs;
    this.buildingEditText = buildingEditText;
    this.buildingInfoLayout = buildingInfoLayout;
    this.destInputLayout = destInputLayout;
    this.destLocationEditText = destLocationEditText;
    this.directionsTextView = directionsTextView;
    this.findBuildingButton = findBuildingButton;
    this.findDistanceButton = findDistanceButton;
    this.routeLayout = routeLayout;
    this.routesListView = routesListView;
    this.startLocationEditText = startLocationEditText;
    this.stepsTextView = stepsTextView;
  }

  @Override
  @NonNull
  public RelativeLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityMapsBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityMapsBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_maps, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityMapsBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.StartInputLayout;
      LinearLayout StartInputLayout = ViewBindings.findChildViewById(rootView, id);
      if (StartInputLayout == null) {
        break missingId;
      }

      id = R.id.addRouteButton;
      Button addRouteButton = ViewBindings.findChildViewById(rootView, id);
      if (addRouteButton == null) {
        break missingId;
      }

      id = R.id.btnShowPOIs;
      Button btnShowPOIs = ViewBindings.findChildViewById(rootView, id);
      if (btnShowPOIs == null) {
        break missingId;
      }

      id = R.id.buildingEditText;
      EditText buildingEditText = ViewBindings.findChildViewById(rootView, id);
      if (buildingEditText == null) {
        break missingId;
      }

      id = R.id.buildingInfoLayout;
      LinearLayout buildingInfoLayout = ViewBindings.findChildViewById(rootView, id);
      if (buildingInfoLayout == null) {
        break missingId;
      }

      id = R.id.destInputLayout;
      LinearLayout destInputLayout = ViewBindings.findChildViewById(rootView, id);
      if (destInputLayout == null) {
        break missingId;
      }

      id = R.id.destLocationEditText;
      EditText destLocationEditText = ViewBindings.findChildViewById(rootView, id);
      if (destLocationEditText == null) {
        break missingId;
      }

      id = R.id.directionsTextView;
      TextView directionsTextView = ViewBindings.findChildViewById(rootView, id);
      if (directionsTextView == null) {
        break missingId;
      }

      id = R.id.findBuildingButton;
      Button findBuildingButton = ViewBindings.findChildViewById(rootView, id);
      if (findBuildingButton == null) {
        break missingId;
      }

      id = R.id.findDistanceButton;
      Button findDistanceButton = ViewBindings.findChildViewById(rootView, id);
      if (findDistanceButton == null) {
        break missingId;
      }

      id = R.id.routeLayout;
      LinearLayout routeLayout = ViewBindings.findChildViewById(rootView, id);
      if (routeLayout == null) {
        break missingId;
      }

      id = R.id.routesListView;
      ListView routesListView = ViewBindings.findChildViewById(rootView, id);
      if (routesListView == null) {
        break missingId;
      }

      id = R.id.startLocationEditText;
      EditText startLocationEditText = ViewBindings.findChildViewById(rootView, id);
      if (startLocationEditText == null) {
        break missingId;
      }

      id = R.id.stepsTextView;
      TextView stepsTextView = ViewBindings.findChildViewById(rootView, id);
      if (stepsTextView == null) {
        break missingId;
      }

      return new ActivityMapsBinding((RelativeLayout) rootView, StartInputLayout, addRouteButton,
          btnShowPOIs, buildingEditText, buildingInfoLayout, destInputLayout, destLocationEditText,
          directionsTextView, findBuildingButton, findDistanceButton, routeLayout, routesListView,
          startLocationEditText, stepsTextView);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
